#!/bin/bash -e
#
# tpm-luks-init: For each entry in the config file, run the script to
#		 generate its PCR values, then run tpm-luks to create a
#		 new TPM NVRAM secret for it
#
#
#set -x
CONF=/etc/tpm-luks.conf
TMPFILE=$(mktemp /tmp/${0##*/}-XXXXXX)

function cleanup
{
	rm -f ${TMPFILE}
}

trap cleanup EXIT

DEVICES=( $(cat ${CONF} | awk -F: '! /^#/ {print $1}') )
SCRIPTS=( $(cat ${CONF} | awk -F: '! /^#/ {print $2}') )

NUM_DEVICES=$(( ${#DEVICES[@]} - 1 ))
NUM_SCRIPTS=$(( ${#SCRIPTS[@]} - 1 ))

if [ $NUM_SCRIPTS -ne $NUM_DEVICES ]; then
	echo "${CONF} parse error" 1>&2
	exit 1
fi

for d in $(seq 0 $NUM_DEVICES); do
	echo "Generating PCR values for ${DEVICES[$d]}..."
	${SCRIPTS[$d]} -o ${TMPFILE}
	if [ $? -ne 0 ]; then
		echo "${SCRIPTS[$d]} has failed. Aborting."
		exit 2
	fi

	echo "Creating new TPM NVRAM secret for ${DEVICES[$d]}..."
	tpm-luks -c -d ${DEVICES[$d]} -p ${TMPFILE}
	if [ $? -ne 0 ]; then
		echo "tpm-luks has failed. Aborting."
		exit 3
	fi
	rm -f ${TMPFILE}
done

exit $?
